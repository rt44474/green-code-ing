name: CodeQL Analysis

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  analyze:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [java]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        upload: false

    - name: Save SARIF file
      if: always()
      run: cp -r $(find . -name '*.sarif') ${{ github.workspace }}

  upload-sarif:
    name: Upload SARIF
    needs: [analyze]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ github.workspace }}/*.sarif
        include: ${{ matrix.include }}
        exclude: ${{ matrix.exclude }}
        fail_on_error: ${{ matrix.fail_on_error }}
        encoding: ${{ matrix.encoding }}
        category: "/language:java/${{ github.run_number }}-${{ github.run_id }}-${{ github.run_attempt }}-${{ github.job }}-${{ randomInt }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RANDOM_INT: ${{ steps.random_int.outputs.value }}

  random_int:
    runs-on: ubuntu-latest
    outputs:
      value: ${{ steps.set_output.outputs.random_int }}
    steps:
    - name: Generate random integer
      id: set_output
      run: echo "::set-output name=random_int::$(shuf -i 1-1000 -n 1)"
